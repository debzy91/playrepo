name: Dependency check (neutral waiting)

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
   
permissions:
  checks: write
  contents: read
  pull-requests: read

jobs:
  check-dependency:
    runs-on: ubuntu-latest
    env:
      DEPENDENT_BRANCH: feature-to-dev-2
      TARGET_BRANCH: dev
      CHECK_NAME: "test-dependency"
    steps:
      - name: Check if dependency PR is merged
        id: detect
        run: |
          echo "üîç Checking if ${DEPENDENT_BRANCH} has been merged into ${TARGET_BRANCH}..."

          OWNER="${{ github.repository_owner }}"
          REPO="$(basename ${{ github.repository }})"

          # Get the closed PR (feature-to-dev-2 -> dev)
          response=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${OWNER}/${REPO}/pulls?base=${TARGET_BRANCH}&head=${OWNER}:${DEPENDENT_BRANCH}&state=closed")

          merged=$(echo "$response" | jq '.[0].merged // false')

          if [ "$merged" = "true" ]; then
            echo "‚úÖ ${DEPENDENT_BRANCH} has been merged into ${TARGET_BRANCH}."
            echo "merged=true" >> $GITHUB_OUTPUT
          else
            echo "‚è≥ ${DEPENDENT_BRANCH} not yet merged into ${TARGET_BRANCH}."
            echo "merged=false" >> $GITHUB_OUTPUT
          fi

      - name: Create check run (success or neutral)
        run: |
          REPO="${{ github.repository }}"
          SHA="${{ github.event.pull_request.head.sha }}"
          API="https://api.github.com/repos/${REPO}/check-runs"
          NAME="${CHECK_NAME}"

          if [ "${{ steps.detect.outputs.merged }}" = "true" ]; then
            SUMMARY="‚úÖ ${DEPENDENT_BRANCH} has been merged into ${TARGET_BRANCH}. Unblocked."
            CONCLUSION="success"
            TITLE="Dependency satisfied"
          else
            SUMMARY="‚è≥ Waiting: ${DEPENDENT_BRANCH} not yet merged into ${TARGET_BRANCH}."
            CONCLUSION="neutral"
            TITLE="Waiting for dependency"
          fi

          echo "üì§ Creating check run with conclusion: $CONCLUSION"

          curl -s -X POST "${API}" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            -d "{
              \"name\": \"${NAME}\",
              \"head_sha\": \"${SHA}\",
              \"status\": \"completed\",
              \"conclusion\": \"${CONCLUSION}\",
              \"output\": {
                \"title\": \"${TITLE}\",
                \"summary\": \"${SUMMARY}\"
              }
            }" \
            | jq '.' || true
