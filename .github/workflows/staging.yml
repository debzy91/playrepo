name: Dependency check Staging (neutral waiting)

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
    branches:
      - staging

permissions:
  checks: write
  contents: read

jobs:
  check-dependency:
    runs-on: ubuntu-latest
    env:
      DEPENDENT_BRANCH: feature-to-dev-2   # The feature branch that must be merged first
      TARGET_BRANCH: dev                   # The branch it should be merged into before unblocking staging
      CHECK_NAME: "test-dependency-dev"
    steps:
      - name: Set up repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch remote branches
        run: |
          git fetch origin $DEPENDENT_BRANCH || true
          git fetch origin $TARGET_BRANCH || true

      - name: Detect if feature branch merged into dev
        id: detect
        run: |
          SHA="${{ github.event.pull_request.head.sha }}"
          echo "PR head SHA: $SHA"
          if git merge-base --is-ancestor origin/${DEPENDENT_BRANCH} origin/${TARGET_BRANCH}; then
            echo "merged=true" >> $GITHUB_OUTPUT
          else
            echo "merged=false" >> $GITHUB_OUTPUT
          fi

      - name: Create check run (success or neutral)
        run: |
          REPO="${{ github.repository }}"
          SHA="${{ github.event.pull_request.head.sha }}"
          API="https://api.github.com/repos/${REPO}/check-runs"
          NAME="${CHECK_NAME}"

          if [ "${{ steps.detect.outputs.merged }}" = "true" ]; then
            SUMMARY="✅ ${DEPENDENT_BRANCH} has been merged into ${TARGET_BRANCH}. Staging is unblocked."
            CONCLUSION="success"
            TITLE="Dependency satisfied"
          else
            SUMMARY="⏳ Waiting: ${DEPENDENT_BRANCH} not yet merged into ${TARGET_BRANCH}."
            CONCLUSION="neutral"
            TITLE="Waiting for dependency"
          fi

          curl -s -X POST "${API}" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            -d "{
              \"name\": \"${NAME}\",
              \"head_sha\": \"${SHA}\",
              \"status\": \"completed\",
              \"conclusion\": \"${CONCLUSION}\",
              \"output\": {
                \"title\": \"${TITLE}\",
                \"summary\": \"${SUMMARY}\"
              }
            }" \
            | jq '.' || true
